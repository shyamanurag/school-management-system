# Generated by Django 5.0.6 on 2025-06-24 18:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_advancedreport_aianalytics_mobileappsession_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_days_per_year', models.IntegerField(default=0)),
                ('max_consecutive_days', models.IntegerField(default=0)),
                ('carry_forward_allowed', models.BooleanField(default=False)),
                ('carry_forward_max_days', models.IntegerField(default=0)),
                ('min_service_months', models.IntegerField(default=0)),
                ('applicable_to_probation', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=True)),
                ('advance_notice_days', models.IntegerField(default=1)),
                ('is_paid', models.BooleanField(default=True)),
                ('salary_deduction_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Leave Type',
                'verbose_name_plural': 'Leave Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PayrollStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('component_type', models.CharField(choices=[('EARNING', 'Earning'), ('DEDUCTION', 'Deduction'), ('BENEFIT', 'Benefit'), ('ALLOWANCE', 'Allowance'), ('TAX', 'Tax')], max_length=15)),
                ('calculation_type', models.CharField(choices=[('FIXED', 'Fixed Amount'), ('PERCENTAGE_BASIC', 'Percentage of Basic'), ('PERCENTAGE_GROSS', 'Percentage of Gross'), ('FORMULA', 'Custom Formula')], default='FIXED', max_length=20)),
                ('fixed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('formula', models.TextField(blank=True, help_text='Python expression for calculation', null=True)),
                ('is_taxable', models.BooleanField(default=True)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Payroll Structure',
                'verbose_name_plural': 'Payroll Structures',
                'ordering': ['component_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('training_type', models.CharField(choices=[('TECHNICAL', 'Technical Training'), ('SOFT_SKILLS', 'Soft Skills'), ('LEADERSHIP', 'Leadership Development'), ('COMPLIANCE', 'Compliance Training'), ('ORIENTATION', 'New Employee Orientation'), ('SAFETY', 'Safety Training'), ('PRODUCT', 'Product Training')], max_length=15)),
                ('delivery_mode', models.CharField(choices=[('CLASSROOM', 'Classroom'), ('ONLINE', 'Online'), ('WEBINAR', 'Webinar'), ('WORKSHOP', 'Workshop'), ('ON_JOB', 'On-the-Job'), ('EXTERNAL', 'External Training')], max_length=15)),
                ('duration_hours', models.IntegerField()),
                ('trainer_name', models.CharField(max_length=200)),
                ('trainer_organization', models.CharField(blank=True, max_length=200, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_deadline', models.DateField()),
                ('venue', models.CharField(blank=True, max_length=200, null=True)),
                ('max_participants', models.IntegerField(default=30)),
                ('cost_per_participant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('prerequisites', models.TextField(blank=True, null=True)),
                ('target_audience', models.TextField(blank=True, null=True)),
                ('learning_objectives', models.JSONField(default=list)),
                ('training_materials', models.JSONField(default=list)),
                ('certification_provided', models.BooleanField(default=False)),
                ('certificate_validity_months', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_mandatory', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Training Program',
                'verbose_name_plural': 'Training Programs',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_id', models.CharField(max_length=50, unique=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('marital_status', models.CharField(choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], default='SINGLE', max_length=10)),
                ('nationality', models.CharField(default='Indian', max_length=100)),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employee_photos/')),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('alternate_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('current_address', models.TextField()),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('emergency_contact_relation', models.CharField(max_length=50)),
                ('employment_type', models.CharField(choices=[('FULL_TIME', 'Full Time'), ('PART_TIME', 'Part Time'), ('CONTRACT', 'Contract'), ('TEMPORARY', 'Temporary'), ('INTERN', 'Intern'), ('CONSULTANT', 'Consultant')], default='FULL_TIME', max_length=15)),
                ('employment_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('TERMINATED', 'Terminated'), ('RESIGNED', 'Resigned'), ('RETIRED', 'Retired'), ('ON_LEAVE', 'On Leave'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=15)),
                ('date_of_joining', models.DateField()),
                ('date_of_leaving', models.DateField(blank=True, null=True)),
                ('probation_period_months', models.IntegerField(default=6)),
                ('probation_end_date', models.DateField(blank=True, null=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(max_length=200)),
                ('qualification', models.TextField()),
                ('experience_before_joining', models.IntegerField(default=0, help_text='Years of experience before joining')),
                ('skills', models.JSONField(default=list)),
                ('certifications', models.JSONField(default=list)),
                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('gross_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('ctc', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=200, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('aadhar_number', models.CharField(blank=True, max_length=20, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True)),
                ('driving_license', models.CharField(blank=True, max_length=20, null=True)),
                ('last_promotion_date', models.DateField(blank=True, null=True)),
                ('last_increment_date', models.DateField(blank=True, null=True)),
                ('performance_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='core.employee')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
                ('work_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.campus')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='HRAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analytics_type', models.CharField(choices=[('EMPLOYEE_TURNOVER', 'Employee Turnover Analysis'), ('PERFORMANCE_TRENDS', 'Performance Trends'), ('ATTENDANCE_PATTERNS', 'Attendance Patterns'), ('COMPENSATION_ANALYSIS', 'Compensation Analysis'), ('TRAINING_EFFECTIVENESS', 'Training Effectiveness'), ('RECRUITMENT_METRICS', 'Recruitment Metrics'), ('ENGAGEMENT_SURVEY', 'Employee Engagement'), ('DIVERSITY_INCLUSION', 'Diversity & Inclusion'), ('SUCCESSION_PLANNING', 'Succession Planning'), ('WORKFORCE_PLANNING', 'Workforce Planning')], max_length=25)),
                ('analysis_period_start', models.DateField()),
                ('analysis_period_end', models.DateField()),
                ('metrics_data', models.JSONField(default=dict)),
                ('kpi_scores', models.JSONField(default=dict)),
                ('benchmarks', models.JSONField(default=dict)),
                ('key_insights', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('action_items', models.JSONField(default=list)),
                ('trend_data', models.JSONField(default=dict)),
                ('forecast_data', models.JSONField(default=dict)),
                ('risk_factors', models.JSONField(default=list)),
                ('risk_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('is_automated', models.BooleanField(default=True)),
                ('is_confidential', models.BooleanField(default=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='accessible_hr_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'HR Analytics',
                'verbose_name_plural': 'HR Analytics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.IntegerField()),
                ('reason', models.TextField()),
                ('contact_during_leave', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled'), ('WITHDRAWN', 'Withdrawn')], default='PENDING', max_length=15)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_remarks', models.TextField(blank=True, null=True)),
                ('hr_processing_date', models.DateTimeField(blank=True, null=True)),
                ('leave_balance_before', models.IntegerField(default=0)),
                ('leave_balance_after', models.IntegerField(default=0)),
                ('applied_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_leaves', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_applications', to='core.employee')),
                ('hr_processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_leaves', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.leavetype')),
            ],
            options={
                'verbose_name': 'Leave Application',
                'verbose_name_plural': 'Leave Applications',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EmployeePayroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('allowances', models.JSONField(default=dict)),
                ('deductions', models.JSONField(default=dict)),
                ('benefits', models.JSONField(default=dict)),
                ('gross_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_deductions', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('working_days', models.IntegerField(default=30)),
                ('present_days', models.IntegerField(default=30)),
                ('absent_days', models.IntegerField(default=0)),
                ('leave_days', models.IntegerField(default=0)),
                ('overtime_hours', models.FloatField(default=0.0)),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Bank Transfer'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque')], default='BANK_TRANSFER', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payrolls', to='core.employee')),
            ],
            options={
                'verbose_name': 'Employee Payroll',
                'verbose_name_plural': 'Employee Payrolls',
                'ordering': ['-pay_period_start'],
                'unique_together': {('employee', 'pay_period_start', 'pay_period_end')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review_type', models.CharField(choices=[('ANNUAL', 'Annual Review'), ('HALF_YEARLY', 'Half Yearly'), ('QUARTERLY', 'Quarterly'), ('MONTHLY', 'Monthly'), ('PROBATION', 'Probation Review'), ('PROJECT', 'Project Review')], max_length=15)),
                ('review_period_start', models.DateField()),
                ('review_period_end', models.DateField()),
                ('goals_achievement', models.JSONField(default=dict)),
                ('competency_ratings', models.JSONField(default=dict)),
                ('kpi_scores', models.JSONField(default=dict)),
                ('overall_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('manager_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('self_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('manager_comments', models.TextField(blank=True, null=True)),
                ('employee_comments', models.TextField(blank=True, null=True)),
                ('hr_comments', models.TextField(blank=True, null=True)),
                ('development_goals', models.JSONField(default=list)),
                ('training_recommendations', models.JSONField(default=list)),
                ('career_aspirations', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SELF_ASSESSMENT', 'Self Assessment'), ('MANAGER_REVIEW', 'Manager Review'), ('HR_REVIEW', 'HR Review'), ('COMPLETED', 'Completed'), ('ACKNOWLEDGED', 'Acknowledged')], default='DRAFT', max_length=20)),
                ('self_assessment_completed', models.BooleanField(default=False)),
                ('manager_review_completed', models.BooleanField(default=False)),
                ('hr_review_completed', models.BooleanField(default=False)),
                ('employee_acknowledged', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='core.employee')),
                ('hr_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance Review',
                'verbose_name_plural': 'Performance Reviews',
                'ordering': ['-review_period_start'],
                'unique_together': {('employee', 'review_type', 'review_period_start')},
            },
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('REGISTERED', 'Registered'), ('CONFIRMED', 'Confirmed'), ('ATTENDED', 'Attended'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show')], default='REGISTERED', max_length=15)),
                ('attendance_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('pre_assessment_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('post_assessment_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('final_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('training_feedback', models.TextField(blank=True, null=True)),
                ('trainer_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('content_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('overall_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('certificate_number', models.CharField(blank=True, max_length=100, null=True)),
                ('certificate_issue_date', models.DateField(blank=True, null=True)),
                ('certificate_expiry_date', models.DateField(blank=True, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_trainings', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_enrollments', to='core.employee')),
                ('training_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.trainingprogram')),
            ],
            options={
                'verbose_name': 'Training Enrollment',
                'verbose_name_plural': 'Training Enrollments',
                'ordering': ['-enrollment_date'],
                'unique_together': {('employee', 'training_program')},
            },
        ),
    ]
